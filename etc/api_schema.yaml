components:
  schemas:
    Body_constructions_import_api_construction_import__get:
      properties:
        table:
          format: binary
          title: Table
          type: string
      required:
      - table
      title: Body_constructions_import_api_construction_import__get
      type: object
    Body_user_login_api_user_login__post:
      properties:
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
        grant_type:
          pattern: password
          title: Grant Type
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_user_login_api_user_login__post
      type: object
    Body_user_me_update_api_user_me__put:
      properties:
        email:
          format: email
          title: Email
          type: string
        full_name:
          title: Full Name
          type: string
        password:
          title: Password
          type: string
      title: Body_user_me_update_api_user_me__put
      type: object
    Body_user_register_api_user_register__post:
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
      required:
      - password
      - email
      - username
      title: Body_user_register_api_user_register__post
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    User:
      properties:
        email:
          format: email
          title: Email
          type: string
        id:
          title: Id
          type: integer
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
      title: User
      type: object
    UserCreate:
      properties:
        email:
          format: email
          title: Email
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserCreate
      type: object
    UserUpdate:
      properties:
        email:
          format: email
          title: Email
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
        password:
          title: Password
          type: string
      title: UserUpdate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: /api/user/login/
      type: oauth2
info:
  title: my_project
  version: 0.1.0
openapi: 3.0.2
paths:
  /:
    get:
      operationId: index__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Index
  /api/construction/import/:
    get:
      operationId: constructions_import_api_construction_import__get
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_constructions_import_api_construction_import__get'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Constructions Import
  /api/construction/{id}/:
    get:
      operationId: construction_get_api_construction__id___get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Construction Get
  /api/user/:
    get:
      operationId: user_list_api_user__get
      parameters:
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                title: Response User List Api User  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User List
    post:
      description: Create new user.
      operationId: user_create_api_user__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Create
  /api/user/activate/{user_id}/:
    get:
      operationId: user_activate_api_user_activate__user_id___get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User Activate
  /api/user/login/:
    post:
      description: OAuth2 compatible token login, get an access token for future requests
      operationId: user_login_api_user_login__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_user_login_api_user_login__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User Login
  /api/user/me/:
    get:
      description: Get current user.
      operationId: user_me_api_user_me__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: User Me
    put:
      description: Update own user.
      operationId: user_me_update_api_user_me__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_user_me_update_api_user_me__put'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Me Update
  /api/user/register/:
    post:
      description: Create new user without the need to be logged in.
      operationId: user_register_api_user_register__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_user_register_api_user_register__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: User Register
  /api/user/{user_id}/:
    get:
      description: Get a specific user by id.
      operationId: user_detail_api_user__user_id___get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Detail
    put:
      description: Update a user.
      operationId: user_update_api_user__user_id___put
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Update
  /info/:
    get:
      operationId: info_info__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Info
