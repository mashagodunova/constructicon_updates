"""

Revision ID: c2f9883762b2
Revises: 115b26f521b3
Create Date: 2023-03-26 22:44:46.969099

"""
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c2f9883762b2'
down_revision = '115b26f521b3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('anchorpos', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('construction', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
        batch_op.alter_column('references',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('family',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('name_ud',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('illustration',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
        batch_op.alter_column('cefr_level',
               existing_type=sa.VARCHAR(length=2),
               nullable=False)
        batch_op.alter_column('anchor_words',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('common_fillers',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('comment',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('dependency_structure',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
        batch_op.alter_column('illustration_dependency_structure',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)

    with op.batch_alter_table('constructiondefinition', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)

    with op.batch_alter_table('constructionexample', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)

    with op.batch_alter_table('equivalent', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)

    with op.batch_alter_table('morphologicaltag', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('semanticrole', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('semantictype', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('singleton', schema=None) as batch_op:
        batch_op.alter_column('maintenance',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    with op.batch_alter_table('syntacticfunction', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('syntacticstructure', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('syntactictype', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=16),
               type_=sqlmodel.sql.sqltypes.AutoString(length=160),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False))
        batch_op.drop_index('ix_user_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_id', ['id'], unique=False)
        batch_op.drop_column('is_verified')

    with op.batch_alter_table('syntactictype', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('syntacticstructure', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('syntacticfunction', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('singleton', schema=None) as batch_op:
        batch_op.alter_column('maintenance',
               existing_type=sa.BOOLEAN(),
               nullable=True)

    with op.batch_alter_table('semantictype', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('semanticrole', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('morphologicaltag', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    with op.batch_alter_table('equivalent', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('constructionexample', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('constructiondefinition', schema=None) as batch_op:
        batch_op.alter_column('value',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('construction', schema=None) as batch_op:
        batch_op.alter_column('illustration_dependency_structure',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('dependency_structure',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('comment',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('common_fillers',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('anchor_words',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('cefr_level',
               existing_type=sa.VARCHAR(length=2),
               nullable=True)
        batch_op.alter_column('illustration',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('name_ud',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('family',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('references',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('anchorpos', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=160),
               type_=sa.TEXT(length=16),
               nullable=True)

    # ### end Alembic commands ###
